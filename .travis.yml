sudo: false              # Use the container-based infrastructure.
language: bash

addons:
  apt:
    packages:
      - libgmp-dev       # Stack's GHC depends on this.

cache:
  timeout: 600           # The cache is too big to upload in 180 seconds.
  directories:
    - $HOME/.stack       # Global stack's cache.
    - $HOME/.foldercache # Per exercise `.stack-work` cache.

env:
 - RESOLVER="lts-16.21" CURRENT="YES"  # Equal to each stack.yaml.
 - RESOLVER="nightly"                  # Latest nightly snapshot.

matrix:
  allow_failures:             # The snapshot `nightly` is just an alias to
    - env: RESOLVER="nightly" # the newest version released. We don't want
  fast_finish: true           # Travis to fail on new incompatible releases.

before_install:
 - mkdir -p ${HOME}/bin                        # Create folder for stack.
 - export PATH="${HOME}/bin:$PATH"             # For stack
 - export PATH="${TRAVIS_BUILD_DIR}/bin:$PATH" # For {,fetch-}configlet.
 - sudo add-apt-repository -y ppa:rmescandon/yq
 - sudo apt-get -q update
 - sudo apt-get -y install yq

install:
 - travis_retry fetch-configlet
 - travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 -o pack.tgz
 - tar xzf pack.tgz --wildcards --strip-components=1 -C ${HOME}/bin '*/stack'
 - stack --resolver ${RESOLVER} --install-ghc install hlint
 - stack --version

script:
 - "sh ./bin/ensure-readmes-are-updated.sh"
 - "sh ./bin/check-configlet-fmt.sh"
 - "sh ./bin/sync-stack-resolvers.sh"
 - |
   # Check for invalid UUIDs.
   # can be removed once `configlet lint` gains this ability.
   # Check issue https://github.com/exercism/configlet/issues/99
   bad_uuid=$(jq --raw-output '.exercises | map(.uuid) | .[]' config.json | grep -vE '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$')
   if [ -n "$bad_uuid" ]; then
     echo "invalid UUIDs found! please correct these to be valid UUIDs:"
     echo "$bad_uuid"
     exit 1
   fi
 - |
    set -e

    configlet lint .          # Check basic track configuration.
    hlint ${TRAVIS_BUILD_DIR} # Run `hlint` on the entire repository.

    # Explicit set exercises' resolver only if it's not the current one.
    if [ "${CURRENT}" != "YES" ]; then
        export SET_RESOLVER="--resolver ${RESOLVER}"
    fi

    for exercise in ${TRAVIS_BUILD_DIR}/exercises/*/ ; do
        time bin/test-stub $exercise
        time bin/test-all-examples $exercise
    done
